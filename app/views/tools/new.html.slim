.page-panel
  h2 Create Tool
  = form_for @tool, html: {class: 'aui'} do |f|
    fieldset.section
      legend Basic Information
      .field-group
        = f.label :name
        = f.text_field :name, placeholder: 'Tool name', class: 'text long-field'

      .field-group
        = f.label :contributors
        = f.text_field :contributors, placeholder: 'Contributors', class: 'text long-field'
        .description Multiple contributors may be seperated by semicolon

      .field-group
        = f.label :category
        = f.collection_select :category_id, @categories, :id, :name, {}, {class: 'select long-field'}

      .field-group
        = f.label :usage
        = f.text_area :usage, placeholder: 'Details about this tool. References are recommended to be included.', class: 'textarea long-field', rows: '10'


    fieldset.section
      legend Runtime Information
      .field-group
        = f.label :params
          | Parameters
          br
          a.aui-icon.aui-icon-small.aui-iconfont-add.add-tr href='javascript:;' data-tpl='#tpl_tr_param' data-target='table.params'
        .long-field
          table.params
            tr
              th width='131px'
                | Param Name
              th width='131px'
                | Param Label
              th width='70px'
                | Type
              th
                | Values/Def.
              th width='50px'
            = empty_row @tool.params, 5
            - if @tool.params
              - for param in @tool.params
                = render 'tools/tr_param', param: param

      .field-group
        = f.label :command
        = f.text_area :command, spellcheck: 'false', class: 'monospace textarea long-field', placeholder: 'command line', rows: '3'

    fieldset.section
      legend Attachments

    .buttons-container
      .buttons
        = f.submit class: 'button submit'

script#tpl_tr_param type='text/html'
  = render partial: 'tools/tr_param', locals: {param: {'type' => 'string'}}

script#tpl_tr_option type='text/html'
  = render partial: 'tools/param_select_option', locals: {option: {}}

- for type in %w[input string bool select path output]
  script id="tpl_param_#{type}" type='text/html'
    = render partial: "tools/param_#{type}", locals: {param: {'type' => type}}
